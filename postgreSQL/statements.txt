/* SQL statements used to set up the filmstack backend*/
/* SEQUENCES */
-- SEQ FOR MOVIES
CREATE SEQUENCE SEQ_MOVIES
MINVALUE 1
START WITH 1
INCREMENT BY 1;

-- SEQ FOR MOVIE IMAGES
CREATE SEQUENCE SEQ_IMAGES
MINVALUE 1
START WITH 1
INCREMENT BY 1;

-- SEQ FOR USERS
CREATE SEQUENCE SEQ_USERS
MINVALUE 1
START WITH 1
INCREMENT BY 1;

-- SEQ FOR REVIEWS
CREATE SEQUENCE SEQ_REVIEWS
MINVALUE 1
START WITH 1
INCREMENT BY 1;

/* GENERIC DROP SEQ STMT */
-- DROP SEQUENCE IF EXISTS mysequence;

/* TABLES */
CREATE TABLE MOVIES
(
  MID INT NOT NULL,
  MNAME VARCHAR(100) NOT NULL,
  MDESC TEXT NOT NULL,
  MYEAR VARCHAR(4),
  MRUNTIME VARCHAR(4),
  PRIMARY KEY (MID),
  UNIQUE (MNAME)
);

CREATE TABLE M_IMAGES
(
  IMGID INT NOT NULL,
  IMGNAME TEXT,
  IMG BYTEA,
  PRIMARY KEY (IMGID),
  FOREIGN KEY (MID) REFERENCES MOVIES(MID)
);

/* Ignore, Django has user auth tables
CREATE TABLE USERS
(
  USERID INT NOT NULL,
  FNAME VARCHAR(30) NOT NULL,
  LNAME VARCHAR(30) NOT NULL,
  UN    VARCHAR(30) NOT NULL, --needed?
  PW    VARCHAR(30) NOT NULL,
  EMAIL VARCHAR(75) NOT NULL,
  ADMIN BOOL NOT NULL DEFAULT 0,
  PRIMARY KEY (USERID),
  UNIQUE (UN),
  UNIQUE (EMAIL)
);

*/
CREATE TABLE REVIEWS
(
  RID INT NOT NULL,
  RAVG NUMBER(*,1) NOT NULL,
  RCOMMENT VARCHAR(500),
  RATING INT DEFAULT 0,
  PRIMARY KEY (RID),
  FOREIGN KEY (USERID) REFERENCES USERS(USERID),
  FOREIGN KEY (MID) REFERENCES MOVIES(MID),
  UNIQUE (USERID),
  CHECK (RATING >= 0 OR RATING <= 5)
);